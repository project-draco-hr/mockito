{
  final MethodInfo method=ReflectUtils.getMethodInfo(ReflectUtils.findInterfaceMethod(iface));
  ClassEmitter ce=new ClassEmitter(cv);
  ce.begin_class(Constants.V1_2,Constants.ACC_PUBLIC,getClassName(),MULTICAST_DELEGATE,new Type[]{Type.getType(iface)},Constants.SOURCE_FILE);
  EmitUtils.null_constructor(ce);
  emitProxy(ce,method);
  CodeEmitter e=ce.begin_method(Constants.ACC_PUBLIC,NEW_INSTANCE,null);
  e.new_instance_this();
  e.dup();
  e.invoke_constructor_this();
  e.return_value();
  e.end_method();
  e=ce.begin_method(Constants.ACC_PUBLIC,ADD_DELEGATE,null);
  e.load_this();
  e.load_arg(0);
  e.checkcast(Type.getType(iface));
  e.invoke_virtual_this(ADD_HELPER);
  e.return_value();
  e.end_method();
  ce.end_class();
}
