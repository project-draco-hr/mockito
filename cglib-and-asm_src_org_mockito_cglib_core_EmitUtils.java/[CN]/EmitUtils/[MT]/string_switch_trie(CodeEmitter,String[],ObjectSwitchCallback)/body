{
  final Label def=e.make_label();
  final Label end=e.make_label();
  final Map buckets=CollectionUtils.bucket(Arrays.asList(strings),new Transformer(){
    public Object transform(    Object value){
      return new Integer(((String)value).length());
    }
  }
);
  e.dup();
  e.invoke_virtual(Constants.TYPE_STRING,STRING_LENGTH);
  e.process_switch(getSwitchKeys(buckets),new ProcessSwitchCallback(){
    public void processCase(    int key,    Label ignore_end) throws Exception {
      List bucket=(List)buckets.get(new Integer(key));
      stringSwitchHelper(e,bucket,callback,def,end,0);
    }
    public void processDefault(){
      e.goTo(def);
    }
  }
);
  e.mark(def);
  e.pop();
  callback.processDefault();
  e.mark(end);
}
