{
  TestObject to1=new TestObject(4);
  TestObject to1Bis=new TestObject(4);
  TestObject to1Ter=new TestObject(4);
  TestObject to2=new TestObject(5);
  TestEmptySubObject teso=new TestEmptySubObject(4);
  TestTSubObject ttso=new TestTSubObject(4,1);
  TestTTSubObject tttso=new TestTTSubObject(4,1,2);
  TestTTLeafObject ttlo=new TestTTLeafObject(4,1,2,3);
  TestSubObject tso1=new TestSubObject(1,4);
  TestSubObject tso1bis=new TestSubObject(1,4);
  TestSubObject tso1ter=new TestSubObject(1,4);
  TestSubObject tso2=new TestSubObject(2,5);
  testReflectionEqualsEquivalenceRelationship(to1,to1Bis,to1Ter,to2,new TestObject(),testTransients);
  testReflectionEqualsEquivalenceRelationship(tso1,tso1bis,tso1ter,tso2,new TestSubObject(),testTransients);
  assertTrue(EqualsBuilder.reflectionEquals(ttlo,ttlo,testTransients));
  assertTrue(EqualsBuilder.reflectionEquals(new TestSubObject(1,10),new TestSubObject(1,10),testTransients));
  assertTrue(!EqualsBuilder.reflectionEquals(new TestSubObject(1,10),new TestSubObject(1,11),testTransients));
  assertTrue(!EqualsBuilder.reflectionEquals(new TestSubObject(1,11),new TestSubObject(1,10),testTransients));
  assertTrue(!EqualsBuilder.reflectionEquals(new TestSubObject(0,10),new TestSubObject(1,10),testTransients));
  assertTrue(!EqualsBuilder.reflectionEquals(new TestSubObject(1,10),new TestSubObject(0,10),testTransients));
  assertTrue(EqualsBuilder.reflectionEquals(to1,teso,testTransients));
  assertTrue(EqualsBuilder.reflectionEquals(teso,to1,testTransients));
  assertTrue(EqualsBuilder.reflectionEquals(to1,ttso,false));
  assertTrue(EqualsBuilder.reflectionEquals(ttso,to1,false));
  assertTrue(EqualsBuilder.reflectionEquals(to1,tttso,false));
  assertTrue(EqualsBuilder.reflectionEquals(tttso,to1,false));
  assertTrue(EqualsBuilder.reflectionEquals(ttso,tttso,false));
  assertTrue(EqualsBuilder.reflectionEquals(tttso,ttso,false));
  assertTrue(!EqualsBuilder.reflectionEquals(new TestObject(0),new TestEmptySubObject(1),testTransients));
  assertTrue(!EqualsBuilder.reflectionEquals(new TestEmptySubObject(1),new TestObject(0),testTransients));
  assertTrue(!EqualsBuilder.reflectionEquals(new TestObject(0),new TestTSubObject(1,1),testTransients));
  assertTrue(!EqualsBuilder.reflectionEquals(new TestTSubObject(1,1),new TestObject(0),testTransients));
  assertTrue(!EqualsBuilder.reflectionEquals(new TestObject(1),new TestSubObject(0,10),testTransients));
  assertTrue(!EqualsBuilder.reflectionEquals(new TestSubObject(0,10),new TestObject(1),testTransients));
  assertTrue(!EqualsBuilder.reflectionEquals(to1,ttlo));
  assertTrue(!EqualsBuilder.reflectionEquals(tso1,this));
}
