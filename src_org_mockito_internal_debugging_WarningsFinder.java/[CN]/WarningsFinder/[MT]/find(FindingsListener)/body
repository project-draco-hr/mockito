{
  List<Invocation> unusedStubs=new LinkedList(this.baseUnusedStubs);
  List<InvocationMatcher> allInvocations=new LinkedList(this.baseAllInvocations);
  Iterator<Invocation> unusedIterator=unusedStubs.iterator();
  while (unusedIterator.hasNext()) {
    Invocation unused=unusedIterator.next();
    Iterator<InvocationMatcher> unstubbedIterator=allInvocations.iterator();
    while (unstubbedIterator.hasNext()) {
      InvocationMatcher unstubbed=unstubbedIterator.next();
      if (unstubbed.hasSimilarMethod(unused)) {
        findingsListener.foundStubCalledWithDifferentArgs(unused,unstubbed);
        unusedIterator.remove();
        unstubbedIterator.remove();
      }
    }
  }
  for (  InvocationImpl i : unusedStubs) {
    findingsListener.foundUnusedStub(i);
  }
  for (  InvocationMatcher i : allInvocations) {
    findingsListener.foundUnstubbed(i);
  }
}
