{
  expect(mock.oneArray(aryEq(new boolean[]{true}))).andReturn("0");
  expect(mock.oneArray(aryEq(new byte[]{1}))).andReturn("1");
  expect(mock.oneArray(aryEq(new char[]{1}))).andReturn("2");
  expect(mock.oneArray(aryEq(new double[]{1}))).andReturn("3");
  expect(mock.oneArray(aryEq(new float[]{1}))).andReturn("4");
  expect(mock.oneArray(aryEq(new int[]{1}))).andReturn("5");
  expect(mock.oneArray(aryEq(new long[]{1}))).andReturn("6");
  expect(mock.oneArray(aryEq(new short[]{1}))).andReturn("7");
  expect(mock.oneArray(aryEq(new String[]{"Test"}))).andReturn("8");
  expect(mock.oneArray(aryEq(new Object[]{"Test"}))).andReturn("9");
  replay(mock);
  assertEquals("9",mock.oneArray(new Object[]{"Test"}));
  assertEquals("0",mock.oneArray(new boolean[]{true}));
  assertEquals("1",mock.oneArray(new byte[]{1}));
  assertEquals("2",mock.oneArray(new char[]{1}));
  assertEquals("3",mock.oneArray(new double[]{1}));
  assertEquals("7",mock.oneArray(new short[]{1}));
  assertEquals("8",mock.oneArray(new String[]{"Test"}));
  assertEquals("4",mock.oneArray(new float[]{1}));
  assertEquals("5",mock.oneArray(new int[]{1}));
  assertEquals("6",mock.oneArray(new long[]{1}));
  verify(mock);
}
