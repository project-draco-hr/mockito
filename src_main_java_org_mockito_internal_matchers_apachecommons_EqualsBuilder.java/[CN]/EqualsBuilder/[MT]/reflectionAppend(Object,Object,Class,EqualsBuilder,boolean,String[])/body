{
  Field[] fields=clazz.getDeclaredFields();
  List excludedFieldList=excludeFields != null ? Arrays.asList(excludeFields) : Collections.EMPTY_LIST;
  AccessibleObject.setAccessible(fields,true);
  for (int i=0; i < fields.length && builder.isEquals; i++) {
    Field f=fields[i];
    if (!excludedFieldList.contains(f.getName()) && (f.getName().indexOf('$') == -1) && (useTransients || !Modifier.isTransient(f.getModifiers()))&& (!Modifier.isStatic(f.getModifiers()))) {
      try {
        builder.append(f.get(lhs),f.get(rhs));
      }
 catch (      IllegalAccessException e) {
        throw new InternalError("Unexpected IllegalAccessException");
      }
    }
  }
}
