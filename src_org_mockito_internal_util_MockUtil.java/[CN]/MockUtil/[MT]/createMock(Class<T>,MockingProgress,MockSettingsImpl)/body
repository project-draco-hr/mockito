{
  creationValidator.validateType(classToMock);
  creationValidator.validateExtraInterfaces(classToMock,settings.getExtraInterfaces());
  creationValidator.validateMockedType(classToMock,settings.getSpiedInstance());
  MockName mockName=new MockName(settings.getMockName(),classToMock);
  MockHandler<T> mockHandler=new MockHandler<T>(mockName,progress,new MatchersBinder(),settings);
  MethodInterceptorFilter filter=new MethodInterceptorFilter(mockHandler,settings);
  Class<?>[] interfaces=settings.getExtraInterfaces();
  Class<?>[] ancillaryTypes=interfaces == null ? new Class<?>[0] : interfaces;
  Object spiedInstance=settings.getSpiedInstance();
  T mock=ClassImposterizer.INSTANCE.imposterise(filter,classToMock,ancillaryTypes);
  if (spiedInstance != null) {
    new LenientCopyTool().copyToMock(spiedInstance,mock);
  }
  return mock;
}
