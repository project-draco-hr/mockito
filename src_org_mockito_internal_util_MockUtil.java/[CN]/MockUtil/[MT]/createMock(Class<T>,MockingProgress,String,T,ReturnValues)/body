{
  validateType(classToMock);
  MockHandler<T> mockHandler=new MockHandler<T>(new MockName(mockName,classToMock),progress,new MatchersBinder(),returnValues);
  MethodInterceptorFilter<MockHandler<T>> filter=new MethodInterceptorFilter<MockHandler<T>>(classToMock,mockHandler);
  T mock=ClassImposterizer.INSTANCE.imposterise(filter,classToMock);
  if (optionalInstance != null) {
    new LenientCopyTool().copyToMock(optionalInstance,mock);
  }
  filter.setInstance(optionalInstance != null ? optionalInstance : mock);
  return mock;
}
