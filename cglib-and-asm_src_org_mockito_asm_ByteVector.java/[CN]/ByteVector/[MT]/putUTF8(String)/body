{
  int charLength=s.length();
  if (length + 2 + charLength > data.length) {
    enlarge(2 + charLength);
  }
  int len=length;
  byte[] data=this.data;
  data[len++]=(byte)(charLength >>> 8);
  data[len++]=(byte)charLength;
  for (int i=0; i < charLength; ++i) {
    char c=s.charAt(i);
    if (c >= '\001' && c <= '\177') {
      data[len++]=(byte)c;
    }
 else {
      int byteLength=i;
      for (int j=i; j < charLength; ++j) {
        c=s.charAt(j);
        if (c >= '\001' && c <= '\177') {
          byteLength++;
        }
 else         if (c > '\u07FF') {
          byteLength+=3;
        }
 else {
          byteLength+=2;
        }
      }
      data[length]=(byte)(byteLength >>> 8);
      data[length + 1]=(byte)byteLength;
      if (length + 2 + byteLength > data.length) {
        length=len;
        enlarge(2 + byteLength);
        data=this.data;
      }
      for (int j=i; j < charLength; ++j) {
        c=s.charAt(j);
        if (c >= '\001' && c <= '\177') {
          data[len++]=(byte)c;
        }
 else         if (c > '\u07FF') {
          data[len++]=(byte)(0xE0 | c >> 12 & 0xF);
          data[len++]=(byte)(0x80 | c >> 6 & 0x3F);
          data[len++]=(byte)(0x80 | c & 0x3F);
        }
 else {
          data[len++]=(byte)(0xC0 | c >> 6 & 0x1F);
          data[len++]=(byte)(0x80 | c & 0x3F);
        }
      }
      break;
    }
  }
  length=len;
  return this;
}
