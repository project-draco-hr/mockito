{
  Class loaded=findLoadedClass(name);
  if (loaded != null) {
    if (loaded.getClassLoader() == this) {
      return loaded;
    }
  }
  if (!filter.accept(name)) {
    return super.loadClass(name);
  }
  ClassReader r;
  try {
    java.io.InputStream is=classPath.getResourceAsStream(name.replace('.','/') + ".class");
    if (is == null) {
      throw new ClassNotFoundException(name);
    }
    try {
      r=new ClassReader(is);
    }
  finally {
      is.close();
    }
  }
 catch (  IOException e) {
    throw new ClassNotFoundException(name + ":" + e.getMessage());
  }
  try {
    ClassWriter w=new DebuggingClassWriter(ClassWriter.COMPUTE_MAXS);
    getGenerator(r).generateClass(w);
    byte[] b=w.toByteArray();
    Class c=super.defineClass(name,b,0,b.length,DOMAIN);
    postProcess(c);
    return c;
  }
 catch (  RuntimeException e) {
    throw e;
  }
catch (  Error e) {
    throw e;
  }
catch (  Exception e) {
    throw new CodeGenerationException(e);
  }
}
