{
  if (!Modifier.isPublic(origin.getDeclaringClass().getModifiers() & origin.getModifiers())) {
    origin.setAccessible(true);
  }
  selfCallInfo.set(instance);
  try {
    return origin.invoke(instance,arguments);
  }
 catch (  InvocationTargetException exception) {
    Throwable cause=exception.getCause();
    new ConditionalStackTraceFilter().filter(hideRecursiveCall(cause,new Throwable().getStackTrace().length,origin.getDeclaringClass()));
    throw cause;
  }
}
