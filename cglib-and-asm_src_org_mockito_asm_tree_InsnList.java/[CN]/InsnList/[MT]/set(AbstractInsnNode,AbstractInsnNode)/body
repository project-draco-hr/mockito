{
  if (check && !(contains(location) && insn.index == -1)) {
    throw new IllegalArgumentException();
  }
  AbstractInsnNode next=location.next;
  insn.next=next;
  if (next != null) {
    next.prev=insn;
  }
 else {
    last=insn;
  }
  AbstractInsnNode prev=location.prev;
  insn.prev=prev;
  if (prev != null) {
    prev.next=insn;
  }
 else {
    first=insn;
  }
  if (cache != null) {
    int index=location.index;
    cache[index]=insn;
    insn.index=index;
  }
 else {
    insn.index=0;
  }
  location.index=-1;
  location.prev=null;
  location.next=null;
}
