{
  ZipFile file1;
  try {
    file1=new ZipFile(filePath1);
  }
 catch (  IOException e) {
    throw new ZipCompareException("Could not open zip file " + filePath1,e);
  }
  ZipFile file2;
  try {
    file2=new ZipFile(filePath2);
  }
 catch (  IOException e) {
    throw new ZipCompareException("Could not open zip file " + filePath1,e);
  }
  System.out.println("Comparing " + filePath1 + " with "+ filePath2+ ":");
  Set set1=new LinkedHashSet();
  for (Enumeration e=file1.entries(); e.hasMoreElements(); )   set1.add(((ZipEntry)e.nextElement()).getName());
  Set set2=new LinkedHashSet();
  for (Enumeration e=file2.entries(); e.hasMoreElements(); )   set2.add(((ZipEntry)e.nextElement()).getName());
  int errcount=0;
  int filecount=0;
  for (Iterator i=set1.iterator(); i.hasNext(); ) {
    String name=(String)i.next();
    if (!set2.contains(name)) {
      System.out.println(name + " not found in " + filePath2);
      errcount+=1;
      continue;
    }
    try {
      set2.remove(name);
      if (!streamsEqual(file1.getInputStream(file1.getEntry(name)),file2.getInputStream(file2.getEntry(name)))) {
        System.out.println(name + " does not match");
        errcount+=1;
        continue;
      }
    }
 catch (    Exception e) {
      System.out.println(name + ": IO Error " + e);
      e.printStackTrace();
      errcount+=1;
      continue;
    }
    filecount+=1;
  }
  for (Iterator i=set2.iterator(); i.hasNext(); ) {
    String name=(String)i.next();
    System.out.println(name + " not found in " + filePath1);
    errcount+=1;
  }
  System.out.println(filecount + " entries matched");
  if (errcount > 0) {
    System.out.println(errcount + " entries did not match");
    return false;
  }
  return true;
}
