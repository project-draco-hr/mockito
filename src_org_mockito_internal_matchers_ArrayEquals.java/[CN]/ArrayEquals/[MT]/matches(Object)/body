{
  Object wanted=getWanted();
  if (wanted == null) {
    return super.matches(actual);
  }
 else   if (wanted instanceof boolean[] && (actual == null || actual instanceof boolean[])) {
    return Arrays.equals((boolean[])wanted,(boolean[])actual);
  }
 else   if (wanted instanceof byte[] && (actual == null || actual instanceof byte[])) {
    return Arrays.equals((byte[])wanted,(byte[])actual);
  }
 else   if (wanted instanceof char[] && (actual == null || actual instanceof char[])) {
    return Arrays.equals((char[])wanted,(char[])actual);
  }
 else   if (wanted instanceof double[] && (actual == null || actual instanceof double[])) {
    return Arrays.equals((double[])wanted,(double[])actual);
  }
 else   if (wanted instanceof float[] && (actual == null || actual instanceof float[])) {
    return Arrays.equals((float[])wanted,(float[])actual);
  }
 else   if (wanted instanceof int[] && (actual == null || actual instanceof int[])) {
    return Arrays.equals((int[])wanted,(int[])actual);
  }
 else   if (wanted instanceof long[] && (actual == null || actual instanceof long[])) {
    return Arrays.equals((long[])wanted,(long[])actual);
  }
 else   if (wanted instanceof short[] && (actual == null || actual instanceof short[])) {
    return Arrays.equals((short[])wanted,(short[])actual);
  }
 else   if (wanted instanceof Object[] && (actual == null || actual instanceof Object[])) {
    return Arrays.equals((Object[])wanted,(Object[])actual);
  }
 else {
    throw new IllegalStateException("Something went really wrong. Arguments passed to ArrayEquals have to be an array!");
  }
}
