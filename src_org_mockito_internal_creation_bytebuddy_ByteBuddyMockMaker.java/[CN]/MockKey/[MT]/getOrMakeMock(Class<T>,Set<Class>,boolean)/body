{
  MockKey<T> mockKey=new MockKey<T>(mockedType,interfaces,acrossClassLoaderSerialization);
  Class<? extends T> mockType=lookup(mockKey);
  if (mockType == null) {
synchronized (mockedType) {
      mockType=lookup(mockKey);
      if (mockType != null) {
        return mockType;
      }
      try {
        mockType=makeMock(mockedType,interfaces,acrossClassLoaderSerialization);
      }
 catch (      Exception e) {
        prettify(mockedType,e);
      }
      previousClasses.put(mockKey,mockType);
    }
  }
  return mockType;
}
