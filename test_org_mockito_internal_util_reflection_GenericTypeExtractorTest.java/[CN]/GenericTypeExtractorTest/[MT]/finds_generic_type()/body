{
  assertEquals(Integer.class,genericTypeOf(IntImpl.class,Base.class,IBase.class));
  assertEquals(Integer.class,genericTypeOf(StaticIntImpl.class,StaticBase.class,IBase.class));
  assertEquals(Object.class,genericTypeOf(NestedImpl.class,Base.class,IBase.class));
  assertEquals(Object.class,genericTypeOf(NonGeneric.class,Base.class,IBase.class));
  assertEquals(Object.class,genericTypeOf(String.class,Base.class,IBase.class));
  assertEquals(Object.class,genericTypeOf(String.class,List.class,Map.class));
  assertEquals(String.class,genericTypeOf(new Base<String>(){
  }
.getClass(),Base.class,IBase.class));
  assertEquals(String.class,genericTypeOf(new IBase<String>(){
  }
.getClass(),Base.class,IBase.class));
  assertEquals(String.class,genericTypeOf(new StaticBase<String>(){
  }
.getClass(),StaticBase.class,IBase.class));
  assertEquals(String.class,genericTypeOf(new StaticIBase<String>(){
  }
.getClass(),Base.class,StaticIBase.class));
  assertEquals(Integer.class,genericTypeOf(Mixed.class,Base.class,IBase.class));
  assertEquals(Integer.class,genericTypeOf(IIntImpl.class,Base.class,IBase.class));
  assertEquals(Object.class,genericTypeOf(INestedImpl.class,Base.class,IBase.class));
  assertEquals(Object.class,genericTypeOf(INonGeneric.class,IBase.class,INonGeneric.class));
  assertEquals(Integer.class,genericTypeOf(Deeper.class,Base.class,IBase.class));
  assertEquals(Integer.class,genericTypeOf(EvenDeeper.class,Base.class,IBase.class));
  assertEquals(Integer.class,genericTypeOf(Iface.class,Base.class,IBase.class));
  assertEquals(Integer.class,genericTypeOf(IDeeper.class,Base.class,IBase.class));
  assertEquals(Integer.class,genericTypeOf(Crazy.class,Base.class,IBase.class));
  assertEquals(Integer.class,genericTypeOf(Crazier.class,Base.class,IBase.class));
}
