{
  DynamicType.Builder<T> builder=byteBuddy.subclass(features.mockedType,ConstructorStrategy.Default.IMITATE_SUPER_TYPE).name(nameFor(features.mockedType)).implement(features.interfaces.toArray(new Class<?>[features.interfaces.size()])).method(any()).intercept(MethodDelegation.to(DispatcherDefaultingToRealMethod.class)).defineField("mockitoInterceptor",MockMethodInterceptor.class,PRIVATE).implement(MockAccess.class).intercept(FieldAccessor.ofBeanProperty()).method(isHashCode()).intercept(to(MockMethodInterceptor.ForHashCode.class)).method(isEquals()).intercept(to(MockMethodInterceptor.ForEquals.class)).defineField("serialVersionUID",long.class,STATIC,PRIVATE,FINAL).value(42L);
  if (features.crossClassLoaderSerializable) {
    builder=builder.implement(CrossClassLoaderSerializableMock.class).intercept(to(MockMethodInterceptor.ForWriteReplace.class));
  }
  return builder.make().load(new MultipleParentClassLoader.Builder().append(features.mockedType).append(features.interfaces).append(MultipleParentClassLoader.class.getClassLoader()).append(Thread.currentThread().getContextClassLoader()).filter(isBootstrapClassLoader()).build(),ClassLoadingStrategy.Default.INJECTION).getLoaded();
}
