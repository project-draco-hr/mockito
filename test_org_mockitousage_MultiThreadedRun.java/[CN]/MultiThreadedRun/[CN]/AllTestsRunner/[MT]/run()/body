{
  Result result=JUnitCore.runClasses(MockitoSampleTest.class,EqualsTest.class,CglibTest.class,ExpectedInvocationTest.class,InvocationChunkTest.class,MockFactoryTest.class,MockitoBehaviorTest.class,MockitoStateTest.class,RegisteredInvocationsTest.class,ToTypeMappingsTest.class,VerifyingModeTest.class,InvocationTest.class,MockUtilTest.class,MockitoAssertionErrorTest.class,MockitoErrorTest.class,BridgeMethodPuzzleTest.class,IncorectBindingPuzzleFixedTest.class,UsingVarargsTest.class,ComparableMatchersTest.class,MatchersToStringTest.class,VerificationAndStubbingUsingMatchersTest.class,BasicStubbingTest.class,ReturningDefaultValuesTest.class,StubbingWithThrowablesTest.class,AtLeastOnceVerificationTest.class,BasicVerificationTest.class,ExactNumberOfTimesVerificationTest.class,NiceMessagesWhenVerificationFailsTest.class,NoMoreInteractionsVerificationTest.class,VerificationInOrderMixedWithOrdiraryVerificationTest.class,VerificationInOrderTest.class,VerificationOnMultipleMocksUsingMatchersTest.class,VerificationUsingMatchersTest.class,MatchersTest.class,ReplacingObjectMethodsTest.class,MockControlTest.class,MockitoTest.class,InvalidUsageTest.class,InvalidUseOfMatchersTest.class,NiceMessagesOnStrictOrderErrorsTest.class,InvalidStateDetectionTest.class,StackTrackeFilteringTest.class);
  if (!result.wasSuccessful()) {
    System.err.println("Thread[" + Thread.currentThread().getId() + "]: error!");
    List<Failure> failures=result.getFailures();
    System.err.println(failures.size());
    for (    Failure failure : failures) {
      System.err.println(failure.getTrace());
    }
  }
}
