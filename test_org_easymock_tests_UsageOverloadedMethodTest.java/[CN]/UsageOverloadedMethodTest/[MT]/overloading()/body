{
  mock.oneArg(true);
  controller.setReturnValue("true");
  mock.oneArg(false);
  controller.setReturnValue("false");
  mock.oneArg((byte)0);
  controller.setReturnValue("byte 0");
  mock.oneArg((byte)1);
  controller.setReturnValue("byte 1");
  mock.oneArg((short)0);
  controller.setReturnValue("short 0");
  mock.oneArg((short)1);
  controller.setReturnValue("short 1");
  mock.oneArg((char)0);
  controller.setReturnValue("char 0");
  mock.oneArg((char)1);
  controller.setReturnValue("char 1");
  mock.oneArg(0);
  controller.setReturnValue("int 0");
  mock.oneArg(1);
  controller.setReturnValue("int 1");
  mock.oneArg((long)0);
  controller.setReturnValue("long 0");
  mock.oneArg((long)1);
  controller.setReturnValue("long 1");
  mock.oneArg((float)0);
  controller.setReturnValue("float 0");
  mock.oneArg((float)1);
  controller.setReturnValue("float 1");
  mock.oneArg(0.0);
  controller.setReturnValue("double 0");
  mock.oneArg(1.0);
  controller.setReturnValue("double 1");
  mock.oneArg("Object 0");
  controller.setReturnValue("1");
  mock.oneArg("Object 1");
  controller.setReturnValue("2");
  controller.replay();
  assertEquals("true",mock.oneArg(true));
  assertEquals("false",mock.oneArg(false));
  assertEquals("byte 0",mock.oneArg((byte)0));
  assertEquals("byte 1",mock.oneArg((byte)1));
  assertEquals("short 0",mock.oneArg((short)0));
  assertEquals("short 1",mock.oneArg((short)1));
  assertEquals("char 0",mock.oneArg((char)0));
  assertEquals("char 1",mock.oneArg((char)1));
  assertEquals("int 0",mock.oneArg(0));
  assertEquals("int 1",mock.oneArg(1));
  assertEquals("long 0",mock.oneArg((long)0));
  assertEquals("long 1",mock.oneArg((long)1));
  assertEquals("float 0",mock.oneArg((float)0.0));
  assertEquals("float 1",mock.oneArg((float)1.0));
  assertEquals("double 1",mock.oneArg(1.0));
  assertEquals("double 0",mock.oneArg(0.0));
  assertEquals("1",mock.oneArg("Object 0"));
  assertEquals("2",mock.oneArg("Object 1"));
  controller.verify();
}
