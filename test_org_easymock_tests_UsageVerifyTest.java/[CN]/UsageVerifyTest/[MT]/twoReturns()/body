{
  mock.throwsNothing(true);
  control.setReturnValue("Test");
  control.setReturnValue("Test2");
  control.replay();
  assertEquals("Test",mock.throwsNothing(true));
  boolean failed=true;
  try {
    control.verify();
    failed=false;
  }
 catch (  AssertionError expected) {
    assertEquals("\n  Expectation failure on verify:" + "\n    throwsNothing(true): expected: 2, actual: 1",expected.getMessage());
    assertTrue("stack trace must be filled in",Util.getStackTrace(expected).indexOf(ReplayState.class.getName()) == -1);
  }
  if (!failed)   fail("AssertionError expected");
  assertEquals("Test2",mock.throwsNothing(true));
  control.verify();
  try {
    mock.throwsNothing(true);
    fail("AssertionError expected");
  }
 catch (  AssertionError expected) {
    assertEquals("\n  Unexpected method call throwsNothing(true):" + "\n    throwsNothing(true): expected: 2, actual: 2 (+1)",expected.getMessage());
  }
}
