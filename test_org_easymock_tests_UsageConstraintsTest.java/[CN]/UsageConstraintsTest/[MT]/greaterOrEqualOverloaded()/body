{
  expect(mock.oneArg(geq((byte)1))).andReturn("1");
  expect(mock.oneArg(geq((double)1))).andReturn("3");
  expect(mock.oneArg(geq((float)1))).andReturn("4");
  expect(mock.oneArg(geq((int)1))).andReturn("5");
  expect(mock.oneArg(geq((long)1))).andReturn("6");
  expect(mock.oneArg(geq((short)1))).andReturn("7");
  expect(mock.oneArg(geq(new BigDecimal("1")))).andReturn("8");
  replay(mock);
  assertEquals("1",mock.oneArg((byte)2));
  assertEquals("3",mock.oneArg((double)1));
  assertEquals("7",mock.oneArg((short)2));
  assertEquals("4",mock.oneArg((float)3));
  assertEquals("5",mock.oneArg((int)4));
  assertEquals("6",mock.oneArg((long)5));
  assertEquals("8",mock.oneArg(new BigDecimal("1.5")));
  verify(mock);
}
