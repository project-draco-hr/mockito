{
  super(v);
  begin_class(Constants.V1_2,Constants.ACC_PUBLIC,className,MIXIN,TypeUtils.getTypes(getInterfaces(classes)),Constants.SOURCE_FILE);
  EmitUtils.null_constructor(this);
  EmitUtils.factory_method(this,NEW_INSTANCE);
  declare_field(Constants.ACC_PRIVATE,FIELD_NAME,Constants.TYPE_OBJECT_ARRAY,null);
  CodeEmitter e=begin_method(Constants.ACC_PUBLIC,CSTRUCT_OBJECT_ARRAY,null);
  e.load_this();
  e.super_invoke_constructor();
  e.load_this();
  e.load_arg(0);
  e.putfield(FIELD_NAME);
  e.return_value();
  e.end_method();
  Set unique=new HashSet();
  for (int i=0; i < classes.length; i++) {
    Method[] methods=getMethods(classes[i]);
    for (int j=0; j < methods.length; j++) {
      if (unique.add(MethodWrapper.create(methods[j]))) {
        MethodInfo method=ReflectUtils.getMethodInfo(methods[j]);
        e=EmitUtils.begin_method(this,method,Constants.ACC_PUBLIC);
        e.load_this();
        e.getfield(FIELD_NAME);
        e.aaload((route != null) ? route[i] : i);
        e.checkcast(method.getClassInfo().getType());
        e.load_args();
        e.invoke(method);
        e.return_value();
        e.end_method();
      }
    }
  }
  end_class();
}
