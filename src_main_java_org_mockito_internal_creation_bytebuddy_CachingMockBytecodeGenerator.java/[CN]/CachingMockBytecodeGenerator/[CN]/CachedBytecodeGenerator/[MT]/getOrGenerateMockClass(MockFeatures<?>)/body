{
  MockKey<?> mockKey=MockKey.of(features.mockedType,features.interfaces);
  Class<?> generatedMockClass=getMockClass(mockKey);
  if (generatedMockClass == null) {
synchronized (features.mockedType) {
      generatedMockClass=getMockClass(mockKey);
      if (generatedMockClass == null) {
        generatedMockClass=generator.generateMockClass(features);
        generatedClassCache.put(mockKey,weak ? new WeakReference<Class<?>>(generatedMockClass) : new SoftReference<Class<?>>(generatedMockClass));
      }
    }
  }
  return generatedMockClass;
}
