{
  Field[] fields=context.getDeclaredFields();
  for (  Field field : fields) {
    if (field.isAnnotationPresent(Spy.class) && !field.isAnnotationPresent(InjectMocks.class)) {
      assertNoIncompatibleAnnotations(Spy.class,field,Mock.class,Captor.class);
      field.setAccessible(true);
      Object instance;
      try {
        instance=field.get(testInstance);
        assertNotInterface(instance,field.getType());
        if (new MockUtil().isMock(instance)) {
          Mockito.reset(instance);
        }
 else         if (instance != null) {
          field.set(testInstance,Mockito.mock(instance.getClass(),withSettings().spiedInstance(instance).defaultAnswer(Mockito.CALLS_REAL_METHODS).name(field.getName())));
        }
 else {
          field.set(testInstance,newSpyInstance(testInstance,field));
        }
      }
 catch (      Exception e) {
        throw new MockitoException("Unable to initialize @Spy annotated field '" + field.getName() + "'.\n"+ e.getMessage(),e);
      }
    }
  }
}
