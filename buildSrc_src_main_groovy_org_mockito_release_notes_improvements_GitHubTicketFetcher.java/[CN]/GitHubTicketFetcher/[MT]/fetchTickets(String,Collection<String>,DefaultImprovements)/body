{
  if (ticketIds.isEmpty()) {
    return;
  }
  LOG.info("Querying GitHub API for {} tickets",ticketIds.size());
  Queue<Long> tickets=queuedTicketNumbers(ticketIds);
  try {
    GitHubIssues issues=GitHubIssues.authenticatingWith(authToken).state("closed").filter("all").direction("desc").browse();
    while (!tickets.isEmpty() && issues.hasNextPage()) {
      List<JSONObject> page=issues.nextPage();
      improvements.addAll(wantedImprovements(dropTicketsAboveMaxInPage(tickets,page),page));
    }
  }
 catch (  Exception e) {
    throw new RuntimeException("Problems fetching " + ticketIds.size() + " from GitHub",e);
  }
}
