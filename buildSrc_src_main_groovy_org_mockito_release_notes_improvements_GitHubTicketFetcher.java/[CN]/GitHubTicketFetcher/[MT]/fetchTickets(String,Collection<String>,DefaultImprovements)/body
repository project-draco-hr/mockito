{
  if (ticketIds.isEmpty()) {
    return;
  }
  try {
    LOG.info("Querying GitHub API for {} tickets",ticketIds.size());
    RtGithub github=new RtGithub(gitHubAuthToken);
    Repo repo=github.repos().get(new Coordinates.Simple("mockito/mockito"));
    Issues issues=repo.issues();
    for (    String ticketId : ticketIds) {
      LOG.info(" #{}",ticketId);
      Issue i=issues.get(Integer.parseInt(ticketId));
      Issue.Smart issue=new Issue.Smart(i);
      if (issue.exists() && !issue.isOpen()) {
        improvements.add(new Improvement(issue.number(),issue.title(),issue.htmlUrl().toString(),labels(issue.labels())));
      }
    }
  }
 catch (  Exception e) {
    throw new RuntimeException("Problems fetching " + ticketIds.size() + " from GitHub",e);
  }
}
