{
  return new TypeMockability(){
    @Override public boolean mockable(){
      return !type.isPrimitive() && !Modifier.isFinal(type.getModifiers());
    }
    @Override public String nonMockableReason(){
      if (mockable()) {
        return "";
      }
      if (type.isPrimitive()) {
        return "primitive type";
      }
      if (Modifier.isFinal(type.getModifiers())) {
        return "final class";
      }
      return join("not handled type");
    }
  }
;
}
