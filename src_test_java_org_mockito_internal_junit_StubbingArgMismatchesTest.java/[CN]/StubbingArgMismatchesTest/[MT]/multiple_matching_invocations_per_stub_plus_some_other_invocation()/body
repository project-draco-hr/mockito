{
  Invocation stubbing=new InvocationBuilder().args("a").location("-> at A.java").toInvocation();
  mismatches.add(new InvocationBuilder().args("x").location("-> at X.java").toInvocation(),stubbing);
  mismatches.add(new InvocationBuilder().args("y").location("-> at Y.java").toInvocation(),stubbing);
  mismatches.add(new InvocationBuilder().method("differentMethod").args("n").location("-> at N.java").toInvocation(),new InvocationBuilder().method("differentMethod").args("m").location("-> at M.java").toInvocation());
  mismatches.format("MyTest.myTestMethod",logger);
  assertEquals("[MockitoHint] MyTest.myTestMethod (see javadoc for MockitoHint):\n" + "[MockitoHint] 1. Unused... -> at A.java\n" + "[MockitoHint]  ...args ok? -> at X.java\n"+ "[MockitoHint]  ...args ok? -> at Y.java\n"+ "[MockitoHint] 2. Unused... -> at M.java\n"+ "[MockitoHint]  ...args ok? -> at N.java\n",logger.getLoggedInfo());
}
