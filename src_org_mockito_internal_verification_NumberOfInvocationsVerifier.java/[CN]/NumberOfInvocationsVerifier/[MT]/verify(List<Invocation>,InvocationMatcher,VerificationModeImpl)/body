{
  VerificationModeDecoder decoder=new VerificationModeDecoder(mode);
  List<Invocation> actualInvocations=finder.findInvocations(invocations,wanted,mode);
  int actualCount=actualInvocations.size();
  if (decoder.tooLittleActualInvocations(actualCount)) {
    HasStackTrace lastInvocation=finder.getLastStackTrace(actualInvocations);
    reporter.tooLittleActualInvocations(mode.wantedCount(),actualCount,wanted,lastInvocation);
  }
 else   if (decoder.tooLittleActualInvocationsInAtLeastMode(actualCount)) {
    HasStackTrace lastInvocation=finder.getLastStackTrace(actualInvocations);
    reporter.tooLittleActualInvocationsInAtLeastMode(mode.wantedCount(),actualCount,wanted,lastInvocation);
  }
 else   if (decoder.neverWantedButInvoked(actualCount)) {
    HasStackTrace firstUndesired=actualInvocations.get(mode.wantedCount()).getStackTrace();
    reporter.neverWantedButInvoked(wanted,firstUndesired);
  }
 else   if (decoder.tooManyActualInvocations(actualCount)) {
    HasStackTrace firstUndesired=actualInvocations.get(mode.wantedCount()).getStackTrace();
    reporter.tooManyActualInvocations(mode.wantedCount(),actualCount,wanted,firstUndesired);
  }
  for (  Invocation i : actualInvocations) {
    i.markVerified();
  }
}
