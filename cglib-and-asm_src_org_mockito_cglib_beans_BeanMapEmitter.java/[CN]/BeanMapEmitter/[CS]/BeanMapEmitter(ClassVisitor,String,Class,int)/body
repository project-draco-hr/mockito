{
  super(v);
  begin_class(Constants.V1_2,Constants.ACC_PUBLIC,className,BEAN_MAP,null,Constants.SOURCE_FILE);
  EmitUtils.null_constructor(this);
  EmitUtils.factory_method(this,NEW_INSTANCE);
  generateConstructor();
  Map getters=makePropertyMap(ReflectUtils.getBeanGetters(type));
  Map setters=makePropertyMap(ReflectUtils.getBeanSetters(type));
  Map allProps=new HashMap();
  allProps.putAll(getters);
  allProps.putAll(setters);
  if (require != 0) {
    for (Iterator it=allProps.keySet().iterator(); it.hasNext(); ) {
      String name=(String)it.next();
      if ((((require & BeanMap.REQUIRE_GETTER) != 0) && !getters.containsKey(name)) || (((require & BeanMap.REQUIRE_SETTER) != 0) && !setters.containsKey(name))) {
        it.remove();
        getters.remove(name);
        setters.remove(name);
      }
    }
  }
  generateGet(type,getters);
  generatePut(type,setters);
  String[] allNames=getNames(allProps);
  generateKeySet(allNames);
  generateGetPropertyType(allProps,allNames);
  end_class();
}
