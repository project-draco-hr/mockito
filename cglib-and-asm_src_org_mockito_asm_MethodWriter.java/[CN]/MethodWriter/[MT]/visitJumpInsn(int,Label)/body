{
  Label nextInsn=null;
  if (currentBlock != null) {
    if (compute == FRAMES) {
      currentBlock.frame.execute(opcode,0,null,null);
      label.getFirst().status|=Label.TARGET;
      addSuccessor(Edge.NORMAL,label);
      if (opcode != Opcodes.GOTO) {
        nextInsn=new Label();
      }
    }
 else {
      if (opcode == Opcodes.JSR) {
        if ((label.status & Label.SUBROUTINE) == 0) {
          label.status|=Label.SUBROUTINE;
          ++subroutines;
        }
        currentBlock.status|=Label.JSR;
        addSuccessor(stackSize + 1,label);
        nextInsn=new Label();
      }
 else {
        stackSize+=Frame.SIZE[opcode];
        addSuccessor(stackSize,label);
      }
    }
  }
  if ((label.status & Label.RESOLVED) != 0 && label.position - code.length < Short.MIN_VALUE) {
    if (opcode == Opcodes.GOTO) {
      code.putByte(200);
    }
 else     if (opcode == Opcodes.JSR) {
      code.putByte(201);
    }
 else {
      if (nextInsn != null) {
        nextInsn.status|=Label.TARGET;
      }
      code.putByte(opcode <= 166 ? ((opcode + 1) ^ 1) - 1 : opcode ^ 1);
      code.putShort(8);
      code.putByte(200);
    }
    label.put(this,code,code.length - 1,true);
  }
 else {
    code.putByte(opcode);
    label.put(this,code,code.length - 1,false);
  }
  if (currentBlock != null) {
    if (nextInsn != null) {
      visitLabel(nextInsn);
    }
    if (opcode == Opcodes.GOTO) {
      noSuccessor();
    }
  }
}
