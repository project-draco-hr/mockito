{
  ClassLoader classloader_with_life_shorter_than_cache=inMemoryClassLoader().withClassDefinition("foo.Bar",makeMarkerInterface("foo.Bar")).build();
  CachingMockBytecodeGenerator cachingMockBytecodeGenerator=new CachingMockBytecodeGenerator(true);
  Class<?> the_mock_type=cachingMockBytecodeGenerator.get(withMockFeatures(classloader_with_life_shorter_than_cache.loadClass("foo.Bar"),Collections.<Class<?>>emptySet(),false));
  Class<?> other_mock_type=cachingMockBytecodeGenerator.get(withMockFeatures(classloader_with_life_shorter_than_cache.loadClass("foo.Bar"),Collections.<Class<?>>emptySet(),false));
  assertThat(other_mock_type).isSameAs(the_mock_type);
  assertThat(cachingMockBytecodeGenerator.avoidingClassLeakageCache).hasSize(1);
  classloader_with_life_shorter_than_cache=is_no_more_referenced();
  the_mock_type=is_no_more_referenced();
  System.gc();
  ensure_gc_happened();
  cachingMockBytecodeGenerator.cleanUpCachesForObsoleteClassLoaders();
  assertThat(cachingMockBytecodeGenerator.avoidingClassLeakageCache).hasSize(1);
}
