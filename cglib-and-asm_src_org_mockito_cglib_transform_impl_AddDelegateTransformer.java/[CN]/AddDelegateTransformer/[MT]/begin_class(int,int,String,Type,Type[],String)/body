{
  if (!TypeUtils.isInterface(access)) {
    Type[] all=TypeUtils.add(interfaces,TypeUtils.getTypes(delegateIf));
    super.begin_class(version,access,className,superType,all,sourceFile);
    declare_field(Constants.ACC_PRIVATE | Constants.ACC_TRANSIENT,DELEGATE,delegateType,null);
    for (int i=0; i < delegateIf.length; i++) {
      Method[] methods=delegateIf[i].getMethods();
      for (int j=0; j < methods.length; j++) {
        if (Modifier.isAbstract(methods[j].getModifiers())) {
          addDelegate(methods[j]);
        }
      }
    }
  }
 else {
    super.begin_class(version,access,className,superType,interfaces,sourceFile);
  }
}
