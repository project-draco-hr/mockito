{
  return (byte[])java.security.AccessController.doPrivileged(new java.security.PrivilegedAction(){
    public Object run(){
      byte[] b=DebuggingClassWriter.super.toByteArray();
      if (debugLocation != null) {
        String dirs=className.replace('.',File.separatorChar);
        try {
          new File(debugLocation + File.separatorChar + dirs).getParentFile().mkdirs();
          File file=new File(new File(debugLocation),dirs + ".class");
          OutputStream out=new BufferedOutputStream(new FileOutputStream(file));
          try {
            out.write(b);
          }
  finally {
            out.close();
          }
          if (traceEnabled) {
            file=new File(new File(debugLocation),dirs + ".asm");
            out=new BufferedOutputStream(new FileOutputStream(file));
            try {
              ClassReader cr=new ClassReader(b);
              PrintWriter pw=new PrintWriter(new OutputStreamWriter(out));
              TraceClassVisitor tcv=new TraceClassVisitor(null,pw);
              cr.accept(tcv,0);
              pw.flush();
            }
  finally {
              out.close();
            }
          }
        }
 catch (        IOException e) {
          throw new CodeGenerationException(e);
        }
      }
      return b;
    }
  }
);
}
