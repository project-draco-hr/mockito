{
  if (method != null) {
    return new Invocation(mock,method,args,sequenceNumber);
  }
  Method m;
  List<Class> argTypes=new LinkedList<Class>();
  for (  Object arg : args) {
    if (arg == null) {
      argTypes.add(Object.class);
    }
 else {
      argTypes.add(arg.getClass());
    }
  }
  try {
    m=IMethods.class.getMethod(methodName,argTypes.toArray(new Class[argTypes.size()]));
  }
 catch (  Exception e) {
    throw new RuntimeException("builder only creates invocations of IMethods interface",e);
  }
  return new Invocation(mock,m,args,sequenceNumber);
}
