{
  if (!mode.inOrderMode()) {
    return;
  }
  List<Invocation> chunk=finder.findMatchingChunk(invocations,wanted,mode);
  boolean noMatchFound=chunk.size() == 0;
  if (mode.wantedCountIsZero() && noMatchFound) {
    return;
  }
  int actualCount=chunk.size();
  if (mode.tooLittleActualInvocations(actualCount)) {
    HasStackTrace lastInvocation=finder.getLastStackTrace(chunk);
    reporter.tooLittleActualInvocationsInOrder(mode.wantedCount(),actualCount,wanted.toString(),lastInvocation);
  }
  if (mode.tooManyActualInvocations(actualCount)) {
    HasStackTrace firstUndesired=chunk.get(mode.wantedCount()).getStackTrace();
    reporter.tooManyActualInvocationsInOrder(mode.wantedCount(),actualCount,wanted.toString(),firstUndesired);
  }
  for (  Invocation i : chunk) {
    i.markVerifiedInOrder();
  }
}
